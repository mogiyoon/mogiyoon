{
  "title": "Recho",
  "subtitle": "음악으로 나를 알리는 플랫폼",
  "description": "음악인들이 자유롭게 교류하고, 합주를 함께하고, 악기 중고 거래와 숏폼 영상을 통해 자신을 표현할 수 있는 음악 커뮤니티 플랫폼입니다.\n\n스마트폰의 리소스를 활용하여 합주 영상을 직접 편집할 수 있도록 React Native 기반 앱과 웹뷰 구조로 제작하였습니다.",
  "overview": {
    "projectType": "팀 프로젝트",
    "introduction": "음악인들이 소통할 수 있는 커뮤니티 플랫폼",
    "features": "커뮤니티, 합주 모집, 악기 중고 거래, 숏폼 기능",
    "role": "백엔드, 프론트엔드, ERD 설계, ffmpeg 활용, AWS 서버 구축"
  },
  "summaries": {
    "development": {
      "title": "구현 기능 및 개발 과정",
      "parts": {
        "0": {
          "0": "ffmpeg를 활용한 비디오 편집 로직 구현",
          "1": "짧은 길이 비디오 기준으로 비디오 병합",
          "2": "이퀄라이저로 주파수별 dB 조절 기능 구현"
        },
        "1": {
          "0": "합주 기능(비디오 재생+녹화), 비디오 편집 화면, 비디오 병합 로직 연결",
          "1": "각 페이지별 컴포넌트를 공통 컴포넌트로 리팩토링",
          "2": "jwt 중심으로 로그인 정보 전역 상태 관리"
        },
        "2": {
          "0": "합주 세션 모집 게시판 및 중고 거래 게시판 구현",
          "1": "합주, 세션, 지원자 관계를 글, 댓글, 대댓글 관계에서 착안하여 DB 구조 설계",
          "2": "다만 지원자만 별도의 모듈로 분리하여 관리"
        },
        "3": {
          "0": "기존의 좋아요와 댓글은 각 게시판 모듈별로 관리됨",
          "1": "추후 좋아요 및 댓글 기능 추가, 알람 기능 도입 등 유지/보수 및 확장성 면에서 부적합하다고 생각",
          "2": "좋아요, 댓글을 각각 통합된 모듈로 리팩토링"
        },
        "4": {
          "0": "오토스케일링, 보안을 고려한 서버 구조 재설계",
          "1": "VPC 및 Application Load Balancer 활용",
          "2": "React가 정적 파일 및 SPA 임을 고려하여 S3를 통해 프론트 배포"
        },
        "5": {
          "0": "45개의 이슈 클로즈 중 17개의 이슈 클로즈",
          "1": "코드 품질 향상 및 사용자 경험 개선"
        }
      }
    },
    "troubleshooting": {
      "title": "트러블 슈팅",
      "parts": {
        "1": {
          "0": "문제 상황: 합주 기능을 구현하기 위해 카메라 녹화와 영상 재생을 동시에 해야함.",
          "1": "문제 해결 과정\n\n\t1. mixWithOthers: 'mix' 설정 → 실패\n\t\t- React Native Video 컴포넌트에서 해당 옵션을 설정했지만 작동하지 않음.\n\t\t- 이유: iOS의 기본 오디오 세션 정책상, mixWithOthers 기능이 비활성화되어 있으며, 이를 활성화하려면 네이티브 코드 수정이 필요함.\n\n\t2. 네이티브 모듈에 mixWithOthers 브릿지 추가 → 실패\n\t\t- VisionCamera 라이브러리에는 관련 기능이 있으나, Video 라이브러리에는 존재하지 않음.\n\t\t- 직접 브릿지를 연결해도 효과가 없었음.\n\n\t3. 비디오 라이브러리 네이티브 코드에 옵션 추가 → 실패\n\t\t- 직접 mixWithOthers 관련 설정을 Video 라이브러리에 추가했으나, 여전히 작동하지 않음.\n\n\t4. disableAudioSessionManagement: true 설정 → 성공\n\t\t- 라이브러리 내부의 옵션 중 disableAudioSessionManagement: true 설정을 발견함.\n\t\t- 이 옵션을 활성화하자 비디오와 카메라 오디오가 동시에 작동함.\n",
          "2": "결과: 카메라 녹화 및 영상 재생이 가능해짐. 라이브러리 내부의 코드의 중요성을 깨닫게 됨 "
        },
        "3": {
          "0": "문제 상황: 영상과 이미지의 로딩 속도가 느림.",
          "1": "해결 과정\n\t- 영상과 이미지를 저장/캐싱 하는 방식을 고민함.\n\t- S3 버킷에서 영상/이미지 데이터를 직접 로드하는 초기 방식에서 클라우드 프론트의 CDN을 활용하여 영상/이미지 캐싱",
          "2": "결과: 평균 응답 속도가 2배 정도 빨라짐."
        }
      }
    },
    "results": {
      "title": "결과 및 회고",
      "parts": {
        "0": {
          "0": "결과",
          "1": "\tZustand 기반의 전역 상태 관리",
          "2": "\tresponse DTO를 활용한 응답 형식 일관성 유지 및 응답 최적화",
          "3": "\tffmpeg를 활용한 영상 및 오디오 편집 방법 적용",
          "4": "\t네이티브 코드를 활용한 네이티브 기능 실행",
          "5": "\tCDN을 활용한 로딩 시간 단축"
        },
        "1": {
          "0": "회고",
          "1": "\t공통 컴포넌트 중심의 설계 역량 함양",
          "2": "\t백엔드-프론트엔드 통합 구조 설계 및 구현 경험",
          "3": "\t확장성 있는 설계 및 유지/보수가 편한 코드 품질 향상에 대한 학습",
          "4": "\t영상, 오디오, 사진 편집에서 ffmpeg가 차지하는 중요성 이해",
          "5": "\tAWS 기반의 서버 구축을 통한 VPC, CDN, ALB 구조 정립 및 이해",
          "6": "\tERD 설계, API 설계, 깃허브 브랜치 및 이슈 관리 등 협업 능력 향상"
        }
      }
    },
    "blank": {
      "title": "감사합니다."
    }
  },
  "features": [
    { "name": "🎵 음악 기반 커뮤니티", "description": "음악인들이 자유롭게 소통하고 정보를 공유할 수 있는 게시판 제공" },
    { "name": "🤝 합주 영상 공유", "description": "합주 멤버를 모집하고, 함께 연주한 영상 클립을 공유" },
    { "name": "📱 숏폼 제작", "description": "사용자의 연주나 작업물을 짧은 영상으로 제작하고 공유" },
    { "name": "🛠 악기 중고 거래", "description": "음악 장비와 악기를 사용자 간 중고로 거래할 수 있는 게시판 제공" }
  ],
  "developmentProcess": [
    { "title": "기획 및 구조 설계", "content": "음악인 대상 기능 설계 및 전체 서비스 흐름도 및 ERD 설계" },
    { "title": "기능 구현", "content": "ffmpeg를 이용한 영상 편집 기능 및 사용자 커뮤니티 시스템 구현" },
    { "title": "배포 및 운영", "content": "AWS EC2, S3, Route53, CloudFront를 이용한 서비스 배포" }
  ]
}