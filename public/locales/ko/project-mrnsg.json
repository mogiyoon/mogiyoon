{
  "mrnsg": {
    "title": "mogiyoon-react-native-simple-grid",
    "subtitle": "React Native를 위한 간단하고 가벼운 그리드 컴포넌트",
    "description": "'Test Maker' 프로젝트 진행 중 간단한 그리드 컴포넌트가 필요했지만 NPM에서 적합한 것을 찾지 못했습니다. 이 문제를 해결하기 위해 직접 경량 그리드 라이브러리를 개발하고 배포했습니다. 개발자가 데이터와 원하는 컬럼 수만 전달하면 손쉽게 그리드 레이아웃을 만들 수 있습니다.",
    "overview": {
      "projectType": "개인 프로젝트",
      "introduction": "React Native 환경에서 간단하게 그리드 UI를 구현할 수 있는 라이브러리",
      "features": "컬럼 수 지정, 데이터 매핑 렌더링, 높이 조절 옵션"
    },
    "summaries": {
      "development": {
        "title": "구현 기능 및 개발 과정",
        "parts": {
          "0": {
            "subtitle": "개발 동기",
            "caption": "기존의 그리드 컴포넌트 라이브러리",
            "0": "'Test Maker' 프로젝트에서 간단한 그리드 컴포넌트의 필요성을 느껴 라이브러리를 찾아봤으나, \n현재 npm의 react native grid 컴포넌트는 6년 전 업데이트가 마지막으로 다른 라이브러리와 호환이 안됨. \n굉장히 많은 그리드 라이브러리가 있었지만 원하는 기능이 없거나 설명이 부족하여 직접 구현하고 배포하고자 결심함."
          },
          "1": {
            "subtitle": "개발 과정",
            "caption1": "컴포넌트 배열 생성",
            "caption2": "컴포넌트 행 배열 생성",
            "0": "하나의 컴포넌트씩 반환하는 renderItem 함수를 통해 컴포넌트들의 리스트를 먼저 생성함",
            "1": "열의 크기에 따라 컴포넌트들을 행으로 묶은 배열을 생성함"
          },
          "2": {
            "subtitle": "배포",
            "caption": "그리드 컴포넌트 인터페이스",
            "0": "타입 안정성을 위해 TypeScript로 개발하고, 다른 개발자들도 사용할 수 있도록 NPM에 공개 패키지로 배포"
          }
        }
      },
      "troubleshooting": {
        "title": "트러블 슈팅",
        "parts": {
          "0": {
            "subtitle": "문서 참고 및 라이브러리 활용을 통한 문제 해결",
            "caption": "Create React Native Library 문서"
          },
          "1": {
            "0": "문제 상황: 첫 NPM 배포를 위한 번들링 설정 및 의존성 구성에 어려움을 겪음.",
            "1": "해결 과정\n\n\t1.NPM 배포 프로세스와 TypeScript 라이브러리 번들링 관련 문서를 참고함. \n\t2.Create React Native Library를 분석 및 활용하여 배포함.",
            "2": "결과: 라이브러리 배포 생태계에 대한 깊은 이해를 얻고 성공적으로 패키지를 배포함."
          }
        }
      },
      "results": {
        "title": "결과 및 회고",
        "parts": {
          "0": {
            "0": "결과",
            "1": "\tNPM에 컴포넌트 라이브러리를 성공적으로 개발하고 배포",
            "2": "\t다른 프로젝트에서도 활용할 수 있는 재사용 가능한 컴포넌트 제작",
            "3": "\t확장성 있는 컴포넌트 제작을 위한 TypeScript 이해도 향상"
          },
          "1": {
            "0": "회고",
            "1": "\t기획부터 공개까지 라이브러리 개발의 전 과정을 경험",
            "2": "\t라이브러리 사용자를 위한 명확한 문서화의 중요성을 깨달음",
            "3": "\t하나의 프로젝트에서 마주한 문제를 별도의 모듈형 솔루션으로 만들어 해결하는 방법을 학습"
          }
        }
      },
      "blank": {
        "title": "감사합니다."
      }
    },
    "features": [
      {
        "name": "✨ 쉬운 사용법",
        "description": "'data'와 'columnNumber' 등 최소한의 props로 그리드 레이아웃 생성"
      },
      {
        "name": "🔧 커스터마이징",
        "description": "컬럼 수와 최대 높이를 제어할 수 있는 옵션 제공"
      },
      {
        "name": "⚡ 경량화",
        "description": "의존성을 최소화한 간단한 컴포넌트로 프로젝트에 부담을 주지 않음"
      }
    ],
    "developmentProcess": [
      {
        "title": "문제 파악",
        "content": "개인 프로젝트에 필요했던 간단하고 적합한 그리드 라이브러리의 부재를 인지"
      },
      {
        "title": "핵심 기능 구현",
        "content": "TypeScript와 React Native 컴포넌트를 사용하여 컬럼 기반 아이템 렌더링 핵심 로직 개발"
      },
      {
        "title": "NPM 배포",
        "content": "외부에서 사용할 수 있도록 배포 설정을 완료하고 NPM 레지스트리에 공개"
      }
    ]
  }
}
