{
  "seoul-meari": {
    "title": "Seoul Meari",
    "subtitle": "시민의 일상이 도시의 미래가 되는 AR 소셜 플랫폼",
    "description": "‘서울 메아리’는 시민이 남기는 AR 방명록과 역사 AR 체험을 통해 자연스럽게 도시의 데이터를 수집하고, AI가 이를 분석해 위험 요소를 선제적으로 진단·보고하는 공공 서비스 플랫폼입니다. QR+WebAR로 진입 장벽을 낮추고, GPS·SLAM으로 위치 정합성을 확보하며, 배경에서 동작하는 컴퓨터 비전이 도로 파손·시설물 노후 등 이상 징후를 자동 감지합니다.",
    "overview": {
      "projectType": "팀 프로젝트 (해커톤)",
      "introduction": "AR 기반 시민 참여형 기록(방명록) + 역사 체험 + AI 도시 진단",
      "features": "공간 메아리(AR 방명록), 시간 탐험(VR 역사 체험), AI 도시 진단 ",
      "role": "유니티, 프론트엔드, 백엔드, AR/VR 활용, AWS 서버 구축"
    },
    "summaries": {
      "development": {
        "title": "구현 기능 및 개발 과정",
        "parts": {
          "0": {
            "subtitle": "공간 메아리 (AR 방명록)",
            "caption": "웹 기반 AR 카메라에서 남기는 위치 고정 메모/드로잉",
            "0": "일반 거리에서는 GPS 기반으로 표시하되, 동일 공간의 스캔 레이어가 다르면 다른 메아리로 분리하여 표출."
          },
          "1": {
            "subtitle": "시간 탐험 (장소 인식형 역사 VR)",
            "caption": "GPS 기반 과거 풍경/3D 오브젝트 렌더링",
            "0": "GPS에 기반하여 특정 랜드마크의 근처에 있으면, 해당 장소의 과거 이미지/3D 오브젝트/해설을 AR로 합성. 보물찾기형 UX로 접근성을 높이고 체류 시간을 증가시킴.",
            "1": "패키지(예: gyeongbokgung_v1) 메타데이터 조회 → CDN 병렬 다운로드 → 로컬 캐시 → 인게임에서 매니페스트/의존성/타겟 번들 순으로 로드."
          },
          "2": {
            "subtitle": "AR 도슨트",
            "caption": "사진, GPS 기반의 멀티 모달 자료 설명",
            "0": "사용자가 촬영한 사진과 위치 정보를 기반으로, AI 도슨트가 주변 환경과 맥락을 설명. 건물의 역사, 사건의 의미, 공간적 특징 등을 AR로 직관적으로 안내함."
          },
          "3": {
            "subtitle": "AI 도시 진단 엔진",
            "caption": "촬영 데이터의 배경을 비동기 분석해 이상 탐지",
            "0": "사용자 촬영 데이터의 원본(익명화)을 서버에 업로드하면, 비전 모델이 포트홀/균열/기울어진 간판/녹슨 가로등 등 위험 요소를 감지·분류. 반복 탐지/중복 보고를 클러스터링으로 통합해 신뢰도 점수와 함께 리포트 생성.",
            "1": "Presigned URL 기반 업로드 → 분석 파이프라인 → 클러스터링/중복 통합 → 대시보드 시각화(히트맵/증거 이미지/처리 상태)."
          }
        }
      },
      "troubleshooting": {
        "title": "트러블슈팅",
        "parts": {
          "0": {
            "subtitle": "GPS 튐으로 메시지 급이동",
            "caption00": "ID값 기반의 Equal 메소드 오버라이드",
            "caption01": "활성화 메시지 딕셔너리의 ID 값 조회를 통한 불필요한 렌더링 빙지",
            "0": "smoothingFactor(예: 0.1)로 보정 좌표를 업데이트하여 급격한 위치 변화 완화.",
            "1": "보정 좌표를 기준으로 가시성 판정, 스폰/언로드; 실제 스폰 시점은 최신 GPS로 보완.",
            "2": "이미 생성된 메시지 오브젝트들은 ID 및 해시 테이블을 기반으로 렌더링 됨. 급격스러운 GPS의 변화에도 렌더링된 위치 유지."
          },
          "1": {
            "subtitle": "XR 카메라 충돌",
            "caption10": "Cesium의 Dynamic Camera(BG Camera)를 XR Origin 아래로 이동",
            "caption11": "Dynamic Camera에 카메라의 이동을 포착하는 Track Pose Driver 부착",
            "0": "XR Origin의 메인 카메라와 Cesium Georeference의 Dynamic Camera가 충돌해서 다이나믹 카메라를 XR Origin 아래로 옮겼음",
            "1": "여전히 Main 카메라는 실제 세상을 비추며 에러까지 남아서 메인 카메라를 비활성화함",
            "2": "가상의 세계를 비추고 있으나 휴대폰을 움직여도 따라 움직이지 않아 XR Origin에서 Camera에 어떤 컴포넌트가 있는지 확인했더니 Tracked Pose Driver가 있는 것을 확인함",
            "3": "Main Camera는 삭제하고 Dynamic 카메라에 Pose Driver를 장착해서 문제를 해결함"
          },
          "2": {
            "subtitle": "Cesium 월드에서 비정상 이동",
            "caption": "Anchor/Transform 상호작용과 Origin Shift",
            "0": "GPS 갱신 때마다 위치가 갱신되면서 가만히 있어도 위치가 튀는 문제가 발생함. 10초마다 갱신되는 것으로 보아 GPS와 관련된 문제일 것이라 추측함.",
            "1": "GPS의 값이 과도하게 Cesium Globe Anchor에 반영되었다고 생각하여 Anchor 값과 Transform 값을 모두 로그로 출력해 원인을 확인함",
            "2": "AR과 VR의 충돌이 원인으로 드러남.",
            "3": "초기에는 Cesium Globe Anchor에서 Detect Transform Change를 해제하여 해결함",
            "4": "카메라 transform 변화에도 날아다니진 않지만, Anchor의 GPS 값은 갱신되지 않음",
            "5": "CesiumOriginShift는 플레이어가 멀리 이동할 때 부동소수점 정밀도 문제를 막기 위해 Georeference 기준점을 주기적으로 플레이어 근처로 옮겨주는 역할을 함",
            "6": "하지만 이렇게 하면 Cesium Georeference가 플레이어를 따라오지 않음",
            "7": "따라서 GPS의 초기 위치를 Cesium Georeference 기준으로 설정함"
          }
        }
      },
      "results": {
        "title": "결과 및 발전 계획",
        "parts": {
          "0": {
            "0": "결과",
            "1": "Unity 2022.3 LTS 환경에서 AR/VR 통합을 시도하며 GPS, SLAM, VPS, Cesium Georeference 등 다양한 위치 정합 기술을 학습함.",
            "2": "GPS 튐 현상을 Lerp 기반 스무딩과 칼만 필터 개념으로 보정하는 방법을 적용하고, XR Origin과 Cesium Dynamic Camera의 충돌 문제를 해결하며 카메라 시스템의 구조를 이해함.",
            "3": "대용량 JSON 데이터 처리 시 스트리밍 파서 필요성을 인지하고, Presigned URL 기반 업로드·분석 파이프라인까지 엔드투엔드(E2E) 흐름을 구현하며 서버-클라이언트 연계를 익힘.",
            "4": "‘서울 메아리’는 단순한 기술 실험을 넘어, 시민의 작은 기록이 도시의 미래를 바꾸는 가능성을 보여줌.",
            "5": "사람들이 남긴 메아리가 쌓여서 하나의 이야기 지도가 되고, 그 안에서 과거와 현재, 그리고 미래가 연결되는 경험을 디자인함.",
            "6": "이 프로젝트는 기술을 통해 도시와 시민을 이어주고, 일상 속 참여가 곧 공동체의 안전과 추억으로 이어질 수 있다는 비전을 담고 있음."
          },
          "1": {
            "0": "발전 계획",
            "1": "보안 강화: 서비스 전반에 걸친 데이터 암호화 및 접근 제어 체계 확립",
            "2": "데이터 비식별화: 개인정보 보호를 위한 익명화 및 안전한 데이터 처리 프로세스 구축",
            "3": "다국어 번역: 글로벌 사용자 접근성을 높이기 위한 다국어 지원 및 자동 번역 시스템 강화"
          }
        }
      },
      "blank": {
        "title": "감사합니다."
      }
    },
    "features": [
      {
        "name": "🗺️ 공간 메아리(AR 방명록)",
        "description": "도시 어디서든 텍스트/이모지/드로잉을 AR로 남기고 같은 위치에서 공유합니다."
      },
      {
        "name": "🕰️ 시간 탐험(역사 AR)",
        "description": "랜드마크 인식 시 과거 풍경/3D 오브젝트와 해설이 현재 위에 겹쳐 보입니다."
      },
      {
        "name": "🤖 AI 도시 진단",
        "description": "촬영 데이터의 배경을 분석해 포트홀·균열·노후 시설물 등 위험 요소를 자동 탐지합니다."
      },
      {
        "name": "🔗 QR + WebAR 온보딩",
        "description": "앱 설치 없이 QR 한 번으로 즉시 체험, 이후 GPS 기반으로 어디서나 사용합니다."
      },
      {
        "name": "📊 행정 대시보드 연계",
        "description": "위험 요소를 지도/히트맵/증거 이미지로 시각화하고 처리 플로우를 추적합니다."
      },
      {
        "name": "🔒 프라이버시 보호",
        "description": "민감 정보 블러링, 위치 데이터 익명화/보존 정책, 전 구간 HTTPS 및 서명 URL 사용."
      }
    ],
    "development_process": [
      {
        "title": "문제 정의",
        "content": "사후 신고 중심의 도시 관리에서 선제 진단으로 전환하고, 참여 동기를 ‘기록/놀이’로 재설계."
      },
      {
        "title": "핵심 가설 검증(PoC)",
        "content": "WebAR 방명록 재현성, 랜드마크 인식 신뢰도, AI 위험 탐지 기본 정확도 검증."
      },
      {
        "title": "데이터 파이프라인 구축",
        "content": "프리사인드 업로드→비동기 분석→클러스터링→대시보드 시각화의 E2E 흐름 완성."
      },
      {
        "title": "베타 및 지표",
        "content": "체류 시간·재방문율·위험 탐지 정밀도/재현율·중복 통합률·행정 처리 리드타임을 핵심 KPI로 설정."
      }
    ]
  }
}
