# 워크플로우의 이름을 지정합니다. (GitHub Actions 탭에 표시됨)
name: Deploy to AWS S3 and CloudFront

# 워크플로우가 언제 실행될지를 정의하는 '트리거' 설정입니다.
on:
  push:
    branches:
      - main  # 'main' 브랜치에 코드가 푸시(push)될 때마다 실행됩니다.
  pull_request:
    branches:
      - main

# 실제 수행될 작업(Job)들을 정의합니다.
jobs:
  # 'deploy'라는 이름의 작업을 정의합니다.
  deploy:
    # 이 작업이 실행될 가상 서버의 운영체제를 지정합니다. (보통 ubuntu-latest 사용)
    runs-on: ubuntu-latest

    # 작업 안에서 실행될 단계(Step)들을 순서대로 나열합니다.
    steps:
      # 1. 저장소 코드 가져오기 (체크아웃)
      # GitHub Actions 가상 서버로 현재 브랜치의 코드를 다운로드하는 과정입니다.
      - name: Checkout repository code
        uses: actions/checkout@v4

      # 2. AWS 자격 증명 설정
      # GitHub Secrets에 저장해 둔 키를 사용하여 AWS에 로그인하는 과정입니다.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # 본인의 S3 버킷과 CloudFront가 있는 AWS 리전으로 변경해주세요. (예: 서울은 ap-northeast-2)
          aws-region: ap-northeast-2

      # React, Vue, Angular 등 빌드 과정이 필요한 경우에만 이 단계를 사용하세요.
      # 순수 HTML/CSS/JS 프로젝트라면 이 'Node.js 프로젝트 빌드' 섹션 전체를 삭제해도 됩니다.
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 프로젝트에 맞는 Node.js 버전 입력
      - name: Install dependencies # 의존성 패키지 설치
        run: npm install
      - name: Build project # 프로젝트 빌드
        run: npm run build

      # 4. S3 버킷에 파일 동기화(업로드)
      # AWS CLI 명령어를 사용해 지정된 폴더의 내용을 S3 버킷으로 업로드합니다.
      - name: Sync files to S3 bucket
        run: |
          aws s3 sync ./dist s3://mogiyoon --delete
        # ./dist 부분: 빌드 결과물이 담긴 폴더 경로를 적어주세요. 순수 HTML 프로젝트라면 웹사이트 파일들이 있는 폴더(예: ./src 또는 ./)를 적으면 됩니다.
        # <여기에-버킷-이름-입력> 부분: 실제 S3 버킷 이름으로 교체해주세요.
        # --delete 옵션: 배포하는 폴더에는 없지만 S3 버킷에는 남아있는 낡은 파일을 삭제해줍니다.

      # 5. CloudFront 캐시 무효화
      # S3 파일이 변경되었으니, CloudFront가 전 세계에 뿌려놓은 캐시를 강제로 새로고침하도록 요청합니다.
      - name: Create CloudFront invalidation
        run: |
          aws cloudfront create-invalidation --distribution-id E23HDQBTOWJ5YJ --paths "/*"
        # <여기에-CloudFront-배포-ID-입력> 부분: 실제 CloudFront 배포 ID로 교체해주세요. (예: E123ABCDEF4567)
        # --paths "/*" 부분: 사이트의 모든 파일(*)에 대한 캐시를 무효화하라는 의미입니다.